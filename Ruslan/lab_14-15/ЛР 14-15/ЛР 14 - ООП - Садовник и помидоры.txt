Садовник и помидоры

Описание классовой структуры

Есть Овощ со следующими характеристиками:
1. Индекс
2. Стадия зрелости(стадии: Отсутствует, Цветение, Зеленый, Красный)

Овощ может: 
1. Расти (переходить на следующую стадию созревания)
2. Предоставлять информацию о своей зрелости

-/-

Есть Помидор со следующими характеристиками:
1. Индекс
2. Стадия зрелости(стадии: Отсутствует, Цветение, Зеленый, Красный)
3. Сорт помидора

Помидор может:
1. Расти (переходить на следующую стадию созревания)
2. Предоставлять информацию о своей зрелости
3. Предоставлять информацию о своем сорте

Так как Помидор является Овощем, то он наследует все особенности овоща и обладает дополнительным чертами.

-/-

Есть Куст с помидорами, который: 
1. Содержит список томатов, которые на нем растут
2. Содержит все варианты сортов помидоров (варианты: Агата, Де Барао, Бычье сердце, Сливка)

И может: 
1. Расти вместе с томатами
2. Предоставлять информацию о зрелости всех томатов
3. Предоставлять урожай

-/-

И также есть Садовник, который имеет: 
1. Имя
2. Растение, за которым он ухаживает (куст с помидорами)

И может: 
1. Ухаживать за растением
2. Собирать с него урожай

-/-
Дополнительно можно получить справку по садоводству:

Harvest time for tomatoes should ideally occur
when the fruit is a mature green and
then allowed to ripen off the vine.
This prevents splitting or bruising
and allows for a measure of control over the ripening process.

-/-/-/-/-/-

Задание

Класс Vegetable:
1. Создайте класс Vegetable
2. Создайте статическое свойство states, которое будет содержать все стадии созревания овоща
3. Создайте метод __init__(), внутри которого будут определены два динамических protected свойства: 1) _index - передается параметром и 2) _state - принимает первое значение из словаря states
4. Создайте метод grow(), который будет переводить овощ на следующую стадию созревания
5. Создайте метод is_ripe(), который будет проверять, что овощ созрел (достиг последней стадии созревания)

Класс Tomato:
1. Создайте класс Tomato на основе класса Vegetable
2. Создайте метод __init__(), внутри которого будет доролнительно к свойствам Овоща определено динамическое свойство variety, принимаемое параметром название сорта помидора
3. Создайте метод give_variety(), который будет сообщать сорт помидора

Класс TomatoBush
1. Создайте класс TomatoBush
2. Создайте статическое свойство varieties, которое будет содержать все возможные сорта помидоров
2. Определите метод __init__(), который будет случайным образом определять сорт помидоров, принимать в качестве параметра количество томатов и на основе количества и 
	сорта будет создавать список объектов класса Tomato. 
	Данный список будет храниться внутри динамического свойства tomatoes. Все томаты списка должны быть одного сорта.
3. Создайте метод grow_all(), который будет переводить все объекты из списка томатов на следующий этап созревания
4. Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из списка стали спелыми
5. Создайте метод give_away_all(), который будет чистить список томатов после сбора урожая

Класс Gardener
1. Создайте класс Gardener
2. Создайте метод __init__(), внутри которого будут определены два динамических свойства: 1) name - передается параметром, является публичным и 2) _plant - принимает объект класса Tomato, является protected
3. Создайте метод work(), который заставляет садовника работать, что позволяет растению становиться более зрелым
4. Создайте метод harvest(), который проверяет, все ли плоды созрели. Если все - садовник собирает урожай. Если нет - метод печатает предупреждение.
5. Создайте статический метод knowledge_base(), который выведет в консоль справку по садоводству.

Тесты:
1. Вызовите справку по садоводству
2. Создайте объекты классов TomatoBush и Gardener
3. Используя объект класса Gardener, поухаживайте за кустом с помидорами
4. Попробуйте собрать урожай
5. Если томаты еще не дозрели, продолжайте ухаживать за ними
6. Соберите урожай
7. Определите сорт собранного урожая